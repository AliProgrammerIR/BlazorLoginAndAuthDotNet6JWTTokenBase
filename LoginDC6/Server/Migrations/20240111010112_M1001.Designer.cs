// <auto-generated />
using System;
using LoginDC6.Server.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoginDC6.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240111010112_M1001")]
    partial class M1001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LoginDC6.Server.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("CanRememberMe")
                        .HasColumnType("bit");

                    b.Property<int?>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FaxNumber")
                        .IsRequired()
                        .HasMaxLength(3900)
                        .HasColumnType("nvarchar(3900)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasMaxLength(3900)
                        .HasColumnType("nvarchar(3900)");

                    b.Property<bool>("IsWoman")
                        .HasColumnType("bit");

                    b.Property<string>("LandLinePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(3900)
                        .HasColumnType("nvarchar(3900)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PictureOfUser")
                        .HasMaxLength(1500)
                        .HasColumnType("varbinary(1500)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("WorkAddress")
                        .IsRequired()
                        .HasMaxLength(3900)
                        .HasColumnType("nvarchar(3900)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblBaseInformation", b =>
                {
                    b.Property<long>("BsInfoID")
                        .HasColumnType("bigint");

                    b.Property<bool>("BlnIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("BsInfoDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BsInfoFurtherInfo")
                        .IsRequired()
                        .HasMaxLength(3500)
                        .HasColumnType("nvarchar(3500)");

                    b.Property<int>("BsInfoTypeID")
                        .HasColumnType("int");

                    b.Property<string>("BsInfoValue")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("DateOfInsert")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BsInfoID");

                    b.ToTable("TblBaseInformation", "Bse");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TblBaseInformation");
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblPageNames", b =>
                {
                    b.Property<int>("PageID")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("MnuLinkTitle")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int>("MnuOrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("MnuTitle")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int>("PageParentID")
                        .HasColumnType("int");

                    b.HasKey("PageID");

                    b.ToTable("TblPageNames", "Inf");

                    b.HasData(
                        new
                        {
                            PageID = 1,
                            IsVisible = true,
                            MnuLinkTitle = "UsersAdministration",
                            MnuOrderNumber = 10001,
                            MnuTitle = "مدیریت کاربران",
                            PageParentID = 0
                        },
                        new
                        {
                            PageID = 2,
                            IsVisible = true,
                            MnuLinkTitle = "CustomersAdministration",
                            MnuOrderNumber = 20001,
                            MnuTitle = "مدیریت مشتریان",
                            PageParentID = 0
                        },
                        new
                        {
                            PageID = 3,
                            IsVisible = true,
                            MnuLinkTitle = "CustomersInsuranceHistoryAdministration",
                            MnuOrderNumber = 30001,
                            MnuTitle = "سوابق بیمه مشتری",
                            PageParentID = 0
                        },
                        new
                        {
                            PageID = 4,
                            IsVisible = true,
                            MnuLinkTitle = "BaseInfoAdministration",
                            MnuOrderNumber = 40001,
                            MnuTitle = "مدیریت اطلاعات پایه",
                            PageParentID = 0
                        },
                        new
                        {
                            PageID = 5,
                            IsVisible = true,
                            MnuLinkTitle = "BaseInfoExtraFieldsAdministration",
                            MnuOrderNumber = 50001,
                            MnuTitle = "مدیریت فیلد های اضافی",
                            PageParentID = 0
                        },
                        new
                        {
                            PageID = 32,
                            IsVisible = true,
                            MnuLinkTitle = "BaseInfoExtraFieldsAdministration",
                            MnuOrderNumber = 50001,
                            MnuTitle = "جستجوی سوابق بیمه",
                            PageParentID = 0
                        },
                        new
                        {
                            PageID = 33,
                            IsVisible = true,
                            MnuLinkTitle = "BaseInfoExtraFieldsAdministration",
                            MnuOrderNumber = 50001,
                            MnuTitle = "جستجو",
                            PageParentID = 32
                        },
                        new
                        {
                            PageID = 34,
                            IsVisible = true,
                            MnuLinkTitle = "BaseInfoExtraFieldsAdministration",
                            MnuOrderNumber = 50001,
                            MnuTitle = "خروجی اکسل",
                            PageParentID = 32
                        },
                        new
                        {
                            PageID = 6,
                            IsVisible = true,
                            MnuOrderNumber = 60001,
                            MnuTitle = "ورود به سیستم",
                            PageParentID = 1
                        },
                        new
                        {
                            PageID = 7,
                            IsVisible = true,
                            MnuOrderNumber = 70001,
                            MnuTitle = "مشاهده لیست کاربران",
                            PageParentID = 1
                        },
                        new
                        {
                            PageID = 8,
                            IsVisible = true,
                            MnuOrderNumber = 80001,
                            MnuTitle = "ویرایش کاربر",
                            PageParentID = 1
                        },
                        new
                        {
                            PageID = 9,
                            IsVisible = true,
                            MnuOrderNumber = 90001,
                            MnuTitle = "حذف کاربر",
                            PageParentID = 1
                        },
                        new
                        {
                            PageID = 10,
                            IsVisible = true,
                            MnuOrderNumber = 100001,
                            MnuTitle = "دسترسی کاربران",
                            PageParentID = 1
                        },
                        new
                        {
                            PageID = 11,
                            IsVisible = true,
                            MnuOrderNumber = 110001,
                            MnuTitle = "مدیریت رول های کاربران",
                            PageParentID = 1
                        },
                        new
                        {
                            PageID = 12,
                            IsVisible = true,
                            MnuOrderNumber = 120001,
                            MnuTitle = "مشاهده لیست مشتریان",
                            PageParentID = 2
                        },
                        new
                        {
                            PageID = 13,
                            IsVisible = true,
                            MnuOrderNumber = 130001,
                            MnuTitle = "مشاهده جزئیات اطلاعات مشتری",
                            PageParentID = 2
                        },
                        new
                        {
                            PageID = 14,
                            IsVisible = true,
                            MnuOrderNumber = 140001,
                            MnuTitle = "ثبت مشتری جدید",
                            PageParentID = 2
                        },
                        new
                        {
                            PageID = 15,
                            IsVisible = true,
                            MnuOrderNumber = 150001,
                            MnuTitle = "ویرایش اطلاعات مشتری",
                            PageParentID = 2
                        },
                        new
                        {
                            PageID = 16,
                            IsVisible = true,
                            MnuOrderNumber = 160001,
                            MnuTitle = "حذف مشتری",
                            PageParentID = 2
                        },
                        new
                        {
                            PageID = 17,
                            IsVisible = true,
                            MnuOrderNumber = 170001,
                            MnuTitle = "مشاهده لیست سوابق بیمه",
                            PageParentID = 3
                        },
                        new
                        {
                            PageID = 18,
                            IsVisible = true,
                            MnuOrderNumber = 180001,
                            MnuTitle = "ثبت سابقه بیمه",
                            PageParentID = 3
                        },
                        new
                        {
                            PageID = 19,
                            IsVisible = true,
                            MnuOrderNumber = 190001,
                            MnuTitle = "ویرایش سابقه بیمه",
                            PageParentID = 3
                        },
                        new
                        {
                            PageID = 20,
                            IsVisible = true,
                            MnuOrderNumber = 200001,
                            MnuTitle = "حذف سابقه بیمه",
                            PageParentID = 3
                        },
                        new
                        {
                            PageID = 21,
                            IsVisible = true,
                            MnuOrderNumber = 210001,
                            MnuTitle = "مشاهده جزئیات بیشتر از بیمه نامه",
                            PageParentID = 3
                        },
                        new
                        {
                            PageID = 22,
                            IsVisible = true,
                            MnuOrderNumber = 220001,
                            MnuTitle = "آپلود فایل",
                            PageParentID = 3
                        },
                        new
                        {
                            PageID = 23,
                            IsVisible = true,
                            MnuOrderNumber = 230001,
                            MnuTitle = "حذف فایل ",
                            PageParentID = 3
                        },
                        new
                        {
                            PageID = 24,
                            IsVisible = true,
                            MnuOrderNumber = 240001,
                            MnuTitle = "مشاهده لیست اطلاعات پایه",
                            PageParentID = 4
                        },
                        new
                        {
                            PageID = 25,
                            IsVisible = true,
                            MnuOrderNumber = 250001,
                            MnuTitle = "ویرایش اطلاعات پایه",
                            PageParentID = 4
                        },
                        new
                        {
                            PageID = 26,
                            IsVisible = true,
                            MnuOrderNumber = 260001,
                            MnuTitle = "حذف اطلاعات پایه",
                            PageParentID = 4
                        },
                        new
                        {
                            PageID = 27,
                            IsVisible = true,
                            MnuOrderNumber = 265001,
                            MnuTitle = "ثبت اطلاعات پایه",
                            PageParentID = 4
                        },
                        new
                        {
                            PageID = 28,
                            IsVisible = true,
                            MnuOrderNumber = 270001,
                            MnuTitle = "مشاهده فیلد های اضافی",
                            PageParentID = 5
                        },
                        new
                        {
                            PageID = 29,
                            IsVisible = true,
                            MnuOrderNumber = 280001,
                            MnuTitle = "ثبت فیلد اضافی",
                            PageParentID = 5
                        },
                        new
                        {
                            PageID = 30,
                            IsVisible = true,
                            MnuOrderNumber = 290001,
                            MnuTitle = "ویرایش فیلد اضافی",
                            PageParentID = 5
                        },
                        new
                        {
                            PageID = 31,
                            IsVisible = true,
                            MnuOrderNumber = 300001,
                            MnuTitle = "حذف فیلد اضافی",
                            PageParentID = 5
                        });
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblPagesTexts", b =>
                {
                    b.Property<int>("TextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TextId"), 1L, 1);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertedById")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LongText")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ShortText")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("TextId");

                    b.HasIndex("InsertedById");

                    b.ToTable("TblPagesTexts", "Inf");
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblPagesTextsEditHistory", b =>
                {
                    b.Property<int>("TextHistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TextHistId"), 1L, 1);

                    b.Property<DateTime>("EditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditedById")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LongTextNew")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("LongTextPre")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("ShortTextNew")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShortTextPre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TextId")
                        .HasColumnType("int");

                    b.HasKey("TextHistId");

                    b.HasIndex("TextId");

                    b.ToTable("TblPagesTextsEditHistory", "Inf");
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblUsersPermissions", b =>
                {
                    b.Property<decimal>("PageAccessPermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("PageAccessPermId"), 1L, 1);

                    b.Property<string>("PUserID")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PageCrcPerm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("PageAccessPermId");

                    b.HasIndex("PUserID");

                    b.HasIndex(new[] { "PageId", "PUserID" }, "IX_UsersPermissions")
                        .IsUnique();

                    b.ToTable("TblUsersPermissions", "Usr");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblFiscalPeriodYear", b =>
                {
                    b.HasBaseType("LoginDC6.Server.Entities.TblBaseInformation");

                    b.ToTable("TblBaseInformation", "Bse");

                    b.HasDiscriminator().HasValue("TblFiscalPeriodYear");
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblPagesTexts", b =>
                {
                    b.HasOne("LoginDC6.Server.Entities.ApplicationUser", "InsertedBy")
                        .WithMany()
                        .HasForeignKey("InsertedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsertedBy");
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblPagesTextsEditHistory", b =>
                {
                    b.HasOne("LoginDC6.Server.Entities.TblPagesTexts", "PagesTexts")
                        .WithMany("EditHistory")
                        .HasForeignKey("TextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PagesTexts");
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblUsersPermissions", b =>
                {
                    b.HasOne("LoginDC6.Server.Entities.ApplicationUser", "AppUsers")
                        .WithMany()
                        .HasForeignKey("PUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoginDC6.Server.Entities.TblPageNames", "PageNames")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUsers");

                    b.Navigation("PageNames");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LoginDC6.Server.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LoginDC6.Server.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoginDC6.Server.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LoginDC6.Server.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoginDC6.Server.Entities.TblPagesTexts", b =>
                {
                    b.Navigation("EditHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
